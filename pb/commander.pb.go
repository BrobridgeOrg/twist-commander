// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commander.proto

package twist

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateTransactionRequest struct {
	Mode                 string   `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTransactionRequest) Reset()         { *m = CreateTransactionRequest{} }
func (m *CreateTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionRequest) ProtoMessage()    {}
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{0}
}

func (m *CreateTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionRequest.Unmarshal(m, b)
}
func (m *CreateTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CreateTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionRequest.Merge(m, src)
}
func (m *CreateTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionRequest.Size(m)
}
func (m *CreateTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionRequest proto.InternalMessageInfo

func (m *CreateTransactionRequest) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

type CreateTransactionReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionID        string   `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTransactionReply) Reset()         { *m = CreateTransactionReply{} }
func (m *CreateTransactionReply) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionReply) ProtoMessage()    {}
func (*CreateTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{1}
}

func (m *CreateTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionReply.Unmarshal(m, b)
}
func (m *CreateTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionReply.Marshal(b, m, deterministic)
}
func (m *CreateTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionReply.Merge(m, src)
}
func (m *CreateTransactionReply) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionReply.Size(m)
}
func (m *CreateTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionReply proto.InternalMessageInfo

func (m *CreateTransactionReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreateTransactionReply) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type RegisterTasksRequest struct {
	TransactionID        string             `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Tasks                []*TransactionTask `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RegisterTasksRequest) Reset()         { *m = RegisterTasksRequest{} }
func (m *RegisterTasksRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterTasksRequest) ProtoMessage()    {}
func (*RegisterTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{2}
}

func (m *RegisterTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTasksRequest.Unmarshal(m, b)
}
func (m *RegisterTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTasksRequest.Marshal(b, m, deterministic)
}
func (m *RegisterTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTasksRequest.Merge(m, src)
}
func (m *RegisterTasksRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterTasksRequest.Size(m)
}
func (m *RegisterTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTasksRequest proto.InternalMessageInfo

func (m *RegisterTasksRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

func (m *RegisterTasksRequest) GetTasks() []*TransactionTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type RegisterTasksReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionID        string   `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterTasksReply) Reset()         { *m = RegisterTasksReply{} }
func (m *RegisterTasksReply) String() string { return proto.CompactTextString(m) }
func (*RegisterTasksReply) ProtoMessage()    {}
func (*RegisterTasksReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{3}
}

func (m *RegisterTasksReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTasksReply.Unmarshal(m, b)
}
func (m *RegisterTasksReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTasksReply.Marshal(b, m, deterministic)
}
func (m *RegisterTasksReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTasksReply.Merge(m, src)
}
func (m *RegisterTasksReply) XXX_Size() int {
	return xxx_messageInfo_RegisterTasksReply.Size(m)
}
func (m *RegisterTasksReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTasksReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTasksReply proto.InternalMessageInfo

func (m *RegisterTasksReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterTasksReply) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type ConfirmTransactionRequest struct {
	TransactionID        string               `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Tasks                []*TransactionTask   `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Expires              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ConfirmTransactionRequest) Reset()         { *m = ConfirmTransactionRequest{} }
func (m *ConfirmTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmTransactionRequest) ProtoMessage()    {}
func (*ConfirmTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{4}
}

func (m *ConfirmTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmTransactionRequest.Unmarshal(m, b)
}
func (m *ConfirmTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmTransactionRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmTransactionRequest.Merge(m, src)
}
func (m *ConfirmTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmTransactionRequest.Size(m)
}
func (m *ConfirmTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmTransactionRequest proto.InternalMessageInfo

func (m *ConfirmTransactionRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

func (m *ConfirmTransactionRequest) GetTasks() []*TransactionTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ConfirmTransactionRequest) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

type ConfirmTransactionReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionID        string   `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmTransactionReply) Reset()         { *m = ConfirmTransactionReply{} }
func (m *ConfirmTransactionReply) String() string { return proto.CompactTextString(m) }
func (*ConfirmTransactionReply) ProtoMessage()    {}
func (*ConfirmTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{5}
}

func (m *ConfirmTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmTransactionReply.Unmarshal(m, b)
}
func (m *ConfirmTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmTransactionReply.Marshal(b, m, deterministic)
}
func (m *ConfirmTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmTransactionReply.Merge(m, src)
}
func (m *ConfirmTransactionReply) XXX_Size() int {
	return xxx_messageInfo_ConfirmTransactionReply.Size(m)
}
func (m *ConfirmTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmTransactionReply proto.InternalMessageInfo

func (m *ConfirmTransactionReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ConfirmTransactionReply) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type TransactionTask struct {
	Confirm              *TransactionTaskAction `protobuf:"bytes,1,opt,name=confirm,proto3" json:"confirm,omitempty"`
	Cancel               *TransactionTaskAction `protobuf:"bytes,2,opt,name=cancel,proto3" json:"cancel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransactionTask) Reset()         { *m = TransactionTask{} }
func (m *TransactionTask) String() string { return proto.CompactTextString(m) }
func (*TransactionTask) ProtoMessage()    {}
func (*TransactionTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{6}
}

func (m *TransactionTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionTask.Unmarshal(m, b)
}
func (m *TransactionTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionTask.Marshal(b, m, deterministic)
}
func (m *TransactionTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionTask.Merge(m, src)
}
func (m *TransactionTask) XXX_Size() int {
	return xxx_messageInfo_TransactionTask.Size(m)
}
func (m *TransactionTask) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionTask.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionTask proto.InternalMessageInfo

func (m *TransactionTask) GetConfirm() *TransactionTaskAction {
	if m != nil {
		return m.Confirm
	}
	return nil
}

func (m *TransactionTask) GetCancel() *TransactionTaskAction {
	if m != nil {
		return m.Cancel
	}
	return nil
}

type TransactionTaskAction struct {
	Type                 string            `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Method               string            `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Uri                  string            `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Headers              map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Payload              string            `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransactionTaskAction) Reset()         { *m = TransactionTaskAction{} }
func (m *TransactionTaskAction) String() string { return proto.CompactTextString(m) }
func (*TransactionTaskAction) ProtoMessage()    {}
func (*TransactionTaskAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{7}
}

func (m *TransactionTaskAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionTaskAction.Unmarshal(m, b)
}
func (m *TransactionTaskAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionTaskAction.Marshal(b, m, deterministic)
}
func (m *TransactionTaskAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionTaskAction.Merge(m, src)
}
func (m *TransactionTaskAction) XXX_Size() int {
	return xxx_messageInfo_TransactionTaskAction.Size(m)
}
func (m *TransactionTaskAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionTaskAction.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionTaskAction proto.InternalMessageInfo

func (m *TransactionTaskAction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TransactionTaskAction) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *TransactionTaskAction) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *TransactionTaskAction) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *TransactionTaskAction) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type CancelTransactionRequest struct {
	TransactionID        string   `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTransactionRequest) Reset()         { *m = CancelTransactionRequest{} }
func (m *CancelTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CancelTransactionRequest) ProtoMessage()    {}
func (*CancelTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{8}
}

func (m *CancelTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTransactionRequest.Unmarshal(m, b)
}
func (m *CancelTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CancelTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTransactionRequest.Merge(m, src)
}
func (m *CancelTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CancelTransactionRequest.Size(m)
}
func (m *CancelTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTransactionRequest proto.InternalMessageInfo

func (m *CancelTransactionRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type CancelTransactionReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionID        string   `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTransactionReply) Reset()         { *m = CancelTransactionReply{} }
func (m *CancelTransactionReply) String() string { return proto.CompactTextString(m) }
func (*CancelTransactionReply) ProtoMessage()    {}
func (*CancelTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_36bf467611423882, []int{9}
}

func (m *CancelTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTransactionReply.Unmarshal(m, b)
}
func (m *CancelTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTransactionReply.Marshal(b, m, deterministic)
}
func (m *CancelTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTransactionReply.Merge(m, src)
}
func (m *CancelTransactionReply) XXX_Size() int {
	return xxx_messageInfo_CancelTransactionReply.Size(m)
}
func (m *CancelTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTransactionReply proto.InternalMessageInfo

func (m *CancelTransactionReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CancelTransactionReply) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateTransactionRequest)(nil), "twist.CreateTransactionRequest")
	proto.RegisterType((*CreateTransactionReply)(nil), "twist.CreateTransactionReply")
	proto.RegisterType((*RegisterTasksRequest)(nil), "twist.RegisterTasksRequest")
	proto.RegisterType((*RegisterTasksReply)(nil), "twist.RegisterTasksReply")
	proto.RegisterType((*ConfirmTransactionRequest)(nil), "twist.ConfirmTransactionRequest")
	proto.RegisterType((*ConfirmTransactionReply)(nil), "twist.ConfirmTransactionReply")
	proto.RegisterType((*TransactionTask)(nil), "twist.TransactionTask")
	proto.RegisterType((*TransactionTaskAction)(nil), "twist.TransactionTaskAction")
	proto.RegisterMapType((map[string]string)(nil), "twist.TransactionTaskAction.HeadersEntry")
	proto.RegisterType((*CancelTransactionRequest)(nil), "twist.CancelTransactionRequest")
	proto.RegisterType((*CancelTransactionReply)(nil), "twist.CancelTransactionReply")
}

func init() { proto.RegisterFile("commander.proto", fileDescriptor_36bf467611423882) }

var fileDescriptor_36bf467611423882 = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xad, 0x93, 0x26, 0x21, 0x37, 0x54, 0x85, 0xab, 0x12, 0x5c, 0xf3, 0x68, 0x64, 0xb1, 0x08,
	0x12, 0x72, 0xa5, 0x50, 0x21, 0xd4, 0x15, 0x28, 0x20, 0xd1, 0xad, 0x15, 0xa4, 0xb2, 0x9c, 0xda,
	0xb7, 0xa9, 0xa9, 0xed, 0x31, 0x33, 0x63, 0xc0, 0x2b, 0xbe, 0x86, 0xdf, 0xe2, 0x1b, 0xf8, 0x04,
	0xe4, 0xb1, 0x87, 0xb4, 0x89, 0x53, 0x24, 0x94, 0xee, 0x66, 0xec, 0x73, 0xee, 0x9c, 0x73, 0x5f,
	0xb0, 0x1b, 0xf0, 0x24, 0x61, 0x69, 0x48, 0xc2, 0xcb, 0x04, 0x57, 0x1c, 0x3b, 0xea, 0x5b, 0x24,
	0x95, 0x73, 0x30, 0xe7, 0x7c, 0x1e, 0xd3, 0xa1, 0xfe, 0x78, 0x96, 0x9f, 0x1f, 0xaa, 0x28, 0x21,
	0xa9, 0x58, 0x92, 0x55, 0x38, 0xd7, 0x03, 0x7b, 0x2a, 0x88, 0x29, 0x9a, 0x09, 0x96, 0x4a, 0x16,
	0xa8, 0x88, 0xa7, 0x3e, 0x7d, 0xc9, 0x49, 0x2a, 0x44, 0xd8, 0x4e, 0x78, 0x48, 0xb6, 0x35, 0xb2,
	0xc6, 0x7d, 0x5f, 0x9f, 0xdd, 0x53, 0x18, 0x36, 0xe0, 0xb3, 0xb8, 0x40, 0x1b, 0x7a, 0x32, 0x0f,
	0x02, 0x92, 0x52, 0x13, 0xee, 0xf8, 0xe6, 0x8a, 0xcf, 0x60, 0x47, 0x2d, 0xd0, 0x27, 0xef, 0xec,
	0x96, 0x0e, 0x78, 0xfd, 0xa3, 0xfb, 0x19, 0xf6, 0x7c, 0x9a, 0x47, 0x52, 0x91, 0x98, 0x31, 0x79,
	0x29, 0x8d, 0x8a, 0x15, 0xb6, 0xd5, 0xc0, 0xc6, 0x17, 0xd0, 0x51, 0x25, 0xcb, 0x6e, 0x8d, 0xda,
	0xe3, 0xc1, 0x64, 0xe8, 0x69, 0xff, 0xde, 0x15, 0x95, 0x65, 0x50, 0xbf, 0x02, 0xb9, 0x33, 0xc0,
	0xa5, 0xb7, 0x36, 0xe1, 0xe0, 0xa7, 0x05, 0xfb, 0x53, 0x9e, 0x9e, 0x47, 0x22, 0x69, 0xc8, 0xe6,
	0x2d, 0xf8, 0xc0, 0x23, 0xe8, 0xd1, 0xf7, 0x2c, 0x12, 0x24, 0xed, 0xf6, 0xc8, 0x1a, 0x0f, 0x26,
	0x8e, 0x57, 0x15, 0xdc, 0x33, 0x05, 0xf7, 0x66, 0xa6, 0xe0, 0xbe, 0x81, 0xba, 0x9f, 0xe0, 0x61,
	0x93, 0xcc, 0x4d, 0xa4, 0xe0, 0x07, 0xec, 0x2e, 0x49, 0xc5, 0x57, 0xd0, 0x0b, 0xaa, 0xd7, 0x74,
	0xc8, 0xc1, 0xe4, 0x71, 0xb3, 0xa7, 0xb7, 0x95, 0x0c, 0x03, 0xc6, 0x23, 0xe8, 0x06, 0x2c, 0x0d,
	0x28, 0xd6, 0x2f, 0xfd, 0x8b, 0x56, 0x63, 0xdd, 0xdf, 0x16, 0x3c, 0x68, 0x44, 0x94, 0xdd, 0x3c,
	0x2b, 0xb2, 0xbf, 0xdd, 0x5c, 0x9e, 0x71, 0x08, 0xdd, 0x84, 0xd4, 0x05, 0x0f, 0x6b, 0x37, 0xf5,
	0x0d, 0xef, 0x41, 0x3b, 0x17, 0x91, 0xce, 0x69, 0xdf, 0x2f, 0x8f, 0x38, 0x85, 0xde, 0x05, 0xb1,
	0x90, 0x84, 0xb4, 0xb7, 0x75, 0x65, 0x9e, 0xdf, 0x24, 0xc7, 0xfb, 0x50, 0x61, 0xdf, 0xa7, 0x4a,
	0x14, 0xbe, 0x61, 0x96, 0xd9, 0xcd, 0x58, 0x11, 0x73, 0x16, 0xda, 0x1d, 0x1d, 0xda, 0x5c, 0x9d,
	0x63, 0xb8, 0x7b, 0x95, 0x52, 0x0a, 0xb8, 0xa4, 0xa2, 0xd6, 0x5a, 0x1e, 0x71, 0x0f, 0x3a, 0x5f,
	0x59, 0x9c, 0x53, 0xad, 0xb4, 0xba, 0x1c, 0xb7, 0x5e, 0x5b, 0xee, 0x1b, 0xb0, 0xa7, 0xda, 0xfc,
	0xff, 0x36, 0x9d, 0x1e, 0xea, 0xd5, 0x08, 0x1b, 0xe8, 0x87, 0xc9, 0xaf, 0x16, 0xf4, 0xa7, 0x66,
	0x35, 0xe1, 0x47, 0xb8, 0xbf, 0xb2, 0x3c, 0xf0, 0xa0, 0x4e, 0xe4, 0xba, 0x35, 0xe4, 0x3c, 0x59,
	0x0f, 0xc8, 0xe2, 0xc2, 0xdd, 0xc2, 0x13, 0xd8, 0xb9, 0x36, 0xcd, 0xf8, 0xa8, 0x66, 0x34, 0xed,
	0x13, 0x67, 0xbf, 0xf9, 0x67, 0x15, 0xea, 0x14, 0x70, 0x75, 0x34, 0x70, 0x64, 0x14, 0xac, 0x1b,
	0x6e, 0xe7, 0xe9, 0x0d, 0x88, 0x2a, 0x72, 0xe9, 0x7d, 0x39, 0xc7, 0x0b, 0xef, 0x6b, 0xea, 0xb7,
	0xf0, 0xde, 0x58, 0x1e, 0x77, 0xeb, 0xac, 0xab, 0x07, 0xfd, 0xe5, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x03, 0x94, 0x36, 0x96, 0x01, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommanderClient is the client API for Commander service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommanderClient interface {
	CreateTransaction(ctx context.Context, in *CreateTransactionRequest, opts ...grpc.CallOption) (*CreateTransactionReply, error)
	RegisterTasks(ctx context.Context, in *RegisterTasksRequest, opts ...grpc.CallOption) (*RegisterTasksReply, error)
	ConfirmTransaction(ctx context.Context, in *ConfirmTransactionRequest, opts ...grpc.CallOption) (*ConfirmTransactionReply, error)
	CancelTransaction(ctx context.Context, in *CancelTransactionRequest, opts ...grpc.CallOption) (*CancelTransactionReply, error)
}

type commanderClient struct {
	cc *grpc.ClientConn
}

func NewCommanderClient(cc *grpc.ClientConn) CommanderClient {
	return &commanderClient{cc}
}

func (c *commanderClient) CreateTransaction(ctx context.Context, in *CreateTransactionRequest, opts ...grpc.CallOption) (*CreateTransactionReply, error) {
	out := new(CreateTransactionReply)
	err := c.cc.Invoke(ctx, "/twist.Commander/CreateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commanderClient) RegisterTasks(ctx context.Context, in *RegisterTasksRequest, opts ...grpc.CallOption) (*RegisterTasksReply, error) {
	out := new(RegisterTasksReply)
	err := c.cc.Invoke(ctx, "/twist.Commander/RegisterTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commanderClient) ConfirmTransaction(ctx context.Context, in *ConfirmTransactionRequest, opts ...grpc.CallOption) (*ConfirmTransactionReply, error) {
	out := new(ConfirmTransactionReply)
	err := c.cc.Invoke(ctx, "/twist.Commander/ConfirmTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commanderClient) CancelTransaction(ctx context.Context, in *CancelTransactionRequest, opts ...grpc.CallOption) (*CancelTransactionReply, error) {
	out := new(CancelTransactionReply)
	err := c.cc.Invoke(ctx, "/twist.Commander/CancelTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommanderServer is the server API for Commander service.
type CommanderServer interface {
	CreateTransaction(context.Context, *CreateTransactionRequest) (*CreateTransactionReply, error)
	RegisterTasks(context.Context, *RegisterTasksRequest) (*RegisterTasksReply, error)
	ConfirmTransaction(context.Context, *ConfirmTransactionRequest) (*ConfirmTransactionReply, error)
	CancelTransaction(context.Context, *CancelTransactionRequest) (*CancelTransactionReply, error)
}

// UnimplementedCommanderServer can be embedded to have forward compatible implementations.
type UnimplementedCommanderServer struct {
}

func (*UnimplementedCommanderServer) CreateTransaction(ctx context.Context, req *CreateTransactionRequest) (*CreateTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransaction not implemented")
}
func (*UnimplementedCommanderServer) RegisterTasks(ctx context.Context, req *RegisterTasksRequest) (*RegisterTasksReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTasks not implemented")
}
func (*UnimplementedCommanderServer) ConfirmTransaction(ctx context.Context, req *ConfirmTransactionRequest) (*ConfirmTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmTransaction not implemented")
}
func (*UnimplementedCommanderServer) CancelTransaction(ctx context.Context, req *CancelTransactionRequest) (*CancelTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelTransaction not implemented")
}

func RegisterCommanderServer(s *grpc.Server, srv CommanderServer) {
	s.RegisterService(&_Commander_serviceDesc, srv)
}

func _Commander_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/twist.Commander/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServer).CreateTransaction(ctx, req.(*CreateTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commander_RegisterTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServer).RegisterTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/twist.Commander/RegisterTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServer).RegisterTasks(ctx, req.(*RegisterTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commander_ConfirmTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServer).ConfirmTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/twist.Commander/ConfirmTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServer).ConfirmTransaction(ctx, req.(*ConfirmTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commander_CancelTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServer).CancelTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/twist.Commander/CancelTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServer).CancelTransaction(ctx, req.(*CancelTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Commander_serviceDesc = grpc.ServiceDesc{
	ServiceName: "twist.Commander",
	HandlerType: (*CommanderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTransaction",
			Handler:    _Commander_CreateTransaction_Handler,
		},
		{
			MethodName: "RegisterTasks",
			Handler:    _Commander_RegisterTasks_Handler,
		},
		{
			MethodName: "ConfirmTransaction",
			Handler:    _Commander_ConfirmTransaction_Handler,
		},
		{
			MethodName: "CancelTransaction",
			Handler:    _Commander_CancelTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "commander.proto",
}
